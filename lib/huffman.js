function HuffmanDecoder(payload, offset) {
    this.payload = payload;
    this.index = offset || 0;
    this.currentDigit = -1;
    this.currentNode = null;
    this.reset = function() {
        this.currentNode = this.huffmanTreeForResponse();
    };
    this.reset();
};
HuffmanDecoder.prototype.getNextBit = function() {
    if (this.currentDigit > 6) {
        this.currentDigit = -1;
        this.index++;
    }
    this.currentDigit++;
    return ( (this.payload[this.index] & Math.pow(2, 7 - this.currentDigit)) ? 1 : 0);
};
HuffmanDecoder.prototype.traverse = function(bit) {
    this.currentNode = this.currentNode[bit];
    if (this.currentNode.length === 1) {
        console.log(this.currentNode);
        return;
    } else if (this.currentNode.length === 3) {
	console.log('EOS');
        return;
    }
    this.traverse(this.getNextBit());
};
HuffmanDecoder.prototype.huffmanTreeForResponse = function() {
    return ([
[
  [
    [
      ' ',
      '0'
    ],
    [
      '1',
      '2'
    ]
  ],
  [
    [
      [
        '3',
        '4'
      ],
      [
        '5',
        '8'
      ]
    ],
    [
      [
        '9',
        ':'
      ],
      [
        'T',
        'a'
      ]
    ]
  ]
],
[
  [
    [
      [
        'e',
        [
          ',',
          '-'
        ]
      ],
      [
        [
          '.',
          '6'
        ],
        [
          '7',
          'G'
        ]
      ]
    ],
    [
      [
        [
          'M',
          'S'
        ],
        [
          'c',
          'd'
        ]
      ],
      [
        [
          'i',
          'm'
        ],
        [
          'n',
          'o'
        ]
      ]
    ]
  ],
  [
    [
      [
        [
          'p',
          'r'
        ],
        [
          's',
          't'
        ]
      ],
      [
        [
          [
            'u'
	  ],
          [
            '"',
            '/'
          ]
        ],
        [
          [
            '=',
            'A'
          ],
          [
            'b',
            'f'
          ]
        ]
      ]
    ],
    [
      [
        [
          [
            'g',
            'h'
          ],
          [
            'l',
            'v'
          ]
        ],
        [
          [
            [
              'x'
            ],
            [
              'B',
              'C'
            ]
          ],
          [
            [
              'D',
              'E'
            ],
            [
              'F',
              'I'
            ]
          ]
        ]
      ],
      [
        [
          [
            [
              'J',
              'N'
            ],
            [
              'O',
              'W'
            ]
          ],
          [
            [
              'w',
              'y'
            ],
            [
              [
                '%',
                '('
              ],
              [
                ')',
                ';'
              ]
            ]
          ]
        ],
        [
          [
            [
              [
                'H',
                'L'
              ],
              [
                'P',
                'R'
              ]
            ],
            [
              [
                'U',
                'V'
              ],
              [
                'Y',
                '_'
              ]
            ]
          ],
          [
            [
              [
                'j',
                'k'
              ],
              [
                'q',
                'z'
              ]
            ],
            [
              [
                [
                  '&',
                  'K'
                ],
                [
                  'Q',
                  'X'
                ]
              ],
              [
                [
                  'Z',
                  [
                    '+',
                    '['
                  ]
                ],
                [
                  [
                    ']',
                    [
                      '!',
                      '*'
                    ]
                  ],
                  [
                    [
                      '?',
                      [
                        '#',
                        "'"
                      ]
                    ],
                    [
                      [
                        '>',
                        '\\'
                      ],
                      [
                        [
                          '$',
                          '|'
                        ],
                        [
                          [
                            '^',
                            [
                              '<',
                              '@'
                            ]
                          ],
                          [
                            [
                              '{',
                              '}'
                            ],
                            [
                              '~',
                              [
			        '`',
                                [
				  '',
                                  [
				    [
				      '',
				      [
				        '',
				        [
					  '',
					  [
					   [
					     '',
					     'EOS'
					    ],
					   ''
					  ]
					]
				      ]
				    ],
                                    ''
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ]
]
]);
}

module.exports = HuffmanDecoder;
